{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell SSD\\\\Desktop\\\\mern\\\\entri\\\\auction\\\\my-court\\\\src\\\\components\\\\common\\\\myplayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupPage() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  const fetchGroups = async () => {\n    try {\n      const response = await axios.get('/users/groups'); // Assuming the endpoint to fetch groups\n      setGroups(response.data);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group.groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: group.courts.map(court => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: court.courtName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: court.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)]\n        }, court._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, group._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupPage, \"UbUkkKKaTwVY7PWotTfxor2xXvY=\");\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","GroupPage","_s","groups","setGroups","fetchGroups","response","get","data","error","console","children","map","group","groupName","fileName","_jsxFileName","lineNumber","columnNumber","courts","court","className","courtName","location","_id","_c","$RefreshReg$"],"sources":["C:/Users/Dell SSD/Desktop/mern/entri/auction/my-court/src/components/common/myplayer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction GroupPage() {\r\n    const [groups, setGroups] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchGroups();\r\n    }, []);\r\n\r\n    const fetchGroups = async () => {\r\n        try {\r\n            const response = await axios.get('/users/groups'); // Assuming the endpoint to fetch groups\r\n            setGroups(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching groups:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n           \r\n            {groups.map(group => (\r\n                <div key={group._id}>\r\n                    <h2>{group.groupName}</h2>\r\n                    <div>\r\n                        {group.courts.map(court => (\r\n                            <div key={court._id} className=\"card\">\r\n                                <h3>{court.courtName}</h3>\r\n                                <p>{court.location}</p>\r\n                                {/* Display other court details */}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZQ,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;MACnDH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAW,QAAA,EAEKR,MAAM,CAACS,GAAG,CAACC,KAAK,iBACbb,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAAW,QAAA,EAAKE,KAAK,CAACC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BlB,OAAA;QAAAW,QAAA,EACKE,KAAK,CAACM,MAAM,CAACP,GAAG,CAACQ,KAAK,iBACnBpB,OAAA;UAAqBqB,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACjCX,OAAA;YAAAW,QAAA,EAAKS,KAAK,CAACE;UAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BlB,OAAA;YAAAW,QAAA,EAAIS,KAAK,CAACG;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFjBE,KAAK,CAACI,GAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,GAVAL,KAAK,CAACW,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWd,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAChB,EAAA,CAnCQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAqClB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}